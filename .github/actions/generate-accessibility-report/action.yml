name: 'Generate Accessibility Report'
description: 'Aggregate accessibility scan results into comprehensive reports'
inputs:
  report-dir:
    description: 'Directory containing scan reports'
    required: false
    default: 'accessibility-reports'
  target-url:
    description: 'URL that was scanned'
    required: true
  axe-violations:
    description: 'Number of axe violations found'
    required: false
    default: '0'
  pa11y-issues:
    description: 'Number of pa11y issues found'
    required: false
    default: '0'
  lighthouse-desktop-score:
    description: 'Lighthouse desktop accessibility score'
    required: false
    default: '0'
  lighthouse-mobile-score:
    description: 'Lighthouse mobile accessibility score'
    required: false
    default: '0'
  playwright-violations:
    description: 'Number of Playwright violations found'
    required: false
    default: '0'
  workflow-run-number:
    description: 'GitHub workflow run number'
    required: false
    default: ''

outputs:
  total-issues:
    description: 'Total number of accessibility issues found'
    value: ${{ steps.aggregate.outputs.total-issues }}
  overall-status:
    description: 'Overall scan status (passed/failed)'
    value: ${{ steps.aggregate.outputs.overall-status }}

runs:
  using: 'composite'
  steps:
    - name: Aggregate scan results
      id: aggregate
      shell: bash
      run: |
        echo "Aggregating accessibility scan results..."
        
        # Calculate totals
        AXE_VIOLATIONS=${{ inputs.axe-violations }}
        PA11Y_ISSUES=${{ inputs.pa11y-issues }}
        PLAYWRIGHT_VIOLATIONS=${{ inputs.playwright-violations }}
        LIGHTHOUSE_DESKTOP_SCORE=${{ inputs.lighthouse-desktop-score }}
        LIGHTHOUSE_MOBILE_SCORE=${{ inputs.lighthouse-mobile-score }}
        
        TOTAL_ISSUES=$((AXE_VIOLATIONS + PA11Y_ISSUES + PLAYWRIGHT_VIOLATIONS))
        
        # Determine overall status
        OVERALL_STATUS="passed"
        if [ "$TOTAL_ISSUES" -gt "0" ]; then
          OVERALL_STATUS="failed"
        fi
        
        # Calculate average Lighthouse score
        if [ "$LIGHTHOUSE_DESKTOP_SCORE" != "0" ] && [ "$LIGHTHOUSE_MOBILE_SCORE" != "0" ]; then
          AVERAGE_LIGHTHOUSE_SCORE=$(echo "($LIGHTHOUSE_DESKTOP_SCORE + $LIGHTHOUSE_MOBILE_SCORE) / 2" | bc -l)
        elif [ "$LIGHTHOUSE_DESKTOP_SCORE" != "0" ]; then
          AVERAGE_LIGHTHOUSE_SCORE=$LIGHTHOUSE_DESKTOP_SCORE
        elif [ "$LIGHTHOUSE_MOBILE_SCORE" != "0" ]; then
          AVERAGE_LIGHTHOUSE_SCORE=$LIGHTHOUSE_MOBILE_SCORE
        else
          AVERAGE_LIGHTHOUSE_SCORE=0
        fi
        
        echo "=== Aggregation Summary ==="
        echo "Total Issues: $TOTAL_ISSUES"
        echo "  - Axe Violations: $AXE_VIOLATIONS"
        echo "  - Pa11y Issues: $PA11Y_ISSUES"
        echo "  - Playwright Violations: $PLAYWRIGHT_VIOLATIONS"
        echo "Average Lighthouse Score: $AVERAGE_LIGHTHOUSE_SCORE"
        echo "Overall Status: $OVERALL_STATUS"
        
        # Set outputs
        echo "total-issues=$TOTAL_ISSUES" >> $GITHUB_OUTPUT
        echo "overall-status=$OVERALL_STATUS" >> $GITHUB_OUTPUT

    - name: Generate simple summary
      shell: bash
      run: |
        SUMMARY_PATH="${{ inputs.report-dir }}/accessibility-summary.md"
        
        AXE_VIOLATIONS=${{ inputs.axe-violations }}
        PA11Y_ISSUES=${{ inputs.pa11y-issues }}
        PLAYWRIGHT_VIOLATIONS=${{ inputs.playwright-violations }}
        LIGHTHOUSE_DESKTOP=${{ inputs.lighthouse-desktop-score }}
        LIGHTHOUSE_MOBILE=${{ inputs.lighthouse-mobile-score }}
        TOTAL_ISSUES=$((AXE_VIOLATIONS + PA11Y_ISSUES + PLAYWRIGHT_VIOLATIONS))
        
        cat > "$SUMMARY_PATH" << EOF
        # 🔍 Accessibility Scan Summary
        
        **Target URL:** ${{ inputs.target-url }}
        **Scan Date:** $(date)
        **Status:** $([ "$TOTAL_ISSUES" -eq "0" ] && echo "✅ PASSED" || echo "❌ FAILED")
        
        ## Results Overview
        
        | Tool | Issues/Score | Status |
        |------|-------------|--------|
        | 🔧 Axe-core | $AXE_VIOLATIONS violations | $([ "$AXE_VIOLATIONS" -eq "0" ] && echo "✅ Passed" || echo "❌ Failed") |
        | 📋 Pa11y | $PA11Y_ISSUES issues | $([ "$PA11Y_ISSUES" -eq "0" ] && echo "✅ Passed" || echo "❌ Failed") |
        | 💡 Lighthouse Desktop | $LIGHTHOUSE_DESKTOP% | $([ "$LIGHTHOUSE_DESKTOP" -ge "90" ] && echo "✅ Excellent" || echo "⚠️ Needs Improvement") |
        | 💡 Lighthouse Mobile | $LIGHTHOUSE_MOBILE% | $([ "$LIGHTHOUSE_MOBILE" -ge "90" ] && echo "✅ Excellent" || echo "⚠️ Needs Improvement") |
        | 🎭 Playwright | $PLAYWRIGHT_VIOLATIONS violations | $([ "$PLAYWRIGHT_VIOLATIONS" -eq "0" ] && echo "✅ Passed" || echo "❌ Failed") |
        
        **Total Issues Found:** $TOTAL_ISSUES
        
        $([ "$TOTAL_ISSUES" -eq "0" ] && echo "## 🎉 Congratulations!

        Your application passes all accessibility tests!" || echo "## 🔧 Action Required

        Please review the detailed reports and fix the identified accessibility issues.")
        
        ---
        *Generated by Enterprise Accessibility Scanner - Run #${{ inputs.workflow-run-number }}*
        EOF
        
        echo "✅ Generated accessibility summary: $SUMMARY_PATH"